name: 🌐 Frontend-Only Flow

run-name: 🌐 Frontend-Only Flow to ${{ inputs.environment }}

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string
    outputs:
      success:
        description: 'Whether the flow completed successfully'
        value: ${{ jobs.deploy.outputs.success }}

env:
  NODE_VERSION: '22'

jobs:
  determine-environment:
    uses: ./.github/workflows/determine-environment.yml
    with:
      environment: ${{ inputs.environment }}

  pre-deploy-testing:
    uses: ./.github/workflows/pre-deploy-testing.yml
    needs: determine-environment
    with:
      environment: ${{ needs.determine-environment.outputs.environment }}
    secrets: inherit

  deploy:
    runs-on: ubuntu-latest
    needs: [determine-environment, pre-deploy-testing]
    if: needs.pre-deploy-testing.result == 'success'
    outputs:
      success: ${{ steps.deploy.outputs.success }}
    environment: 
      name: ${{ needs.determine-environment.outputs.environment }}
      url: ${{ steps.deploy.outputs.client_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts from testing
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: ./artifacts

      - name: Restore directory structure from artifacts
        run: |
          echo "=== Restoring directory structure from artifacts ==="
          mkdir -p apps/client apps/admin
          # Check actual structure and adapt
          if [ -d "artifacts/apps/client/out" ]; then
            cp -r artifacts/apps/client/out apps/client/
            cp -r artifacts/apps/admin/out apps/admin/
          elif [ -d "artifacts/client/out" ]; then
            cp -r artifacts/client/out apps/client/
            cp -r artifacts/admin/out apps/admin/
          else
            echo "❌ Unexpected artifact structure"
            find artifacts -name "out" -type d
            exit 1
          fi
          rm -rf artifacts
          echo "✅ Directory structure restored from testing artifacts"

      - name: Verify artifacts structure
        run: |
          echo "=== Verifying build artifacts ==="
          echo "Client out directory:"
          ls -la apps/client/out/ | head -5
          echo "Admin out directory:"
          ls -la apps/admin/out/ | head -5
          echo "✅ Artifacts verified successfully"

      - name: Simulate AWS credentials configuration
        run: |
          echo "🔧 [SIMULATED] Configuring AWS credentials..."
          echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          echo "Region: us-east-1"
          echo "✅ AWS credentials configured (simulated)"

      - name: Simulate infrastructure outputs
        id: infrastructure
        run: |
          ENV="${{ needs.determine-environment.outputs.environment }}"
          echo "🔧 [SIMULATED] Getting infrastructure outputs for: $ENV"
          
          # Simulate realistic outputs
          CLIENT_URL="https://$([[ "$ENV" == "dev" ]] && echo "dev" || echo "$ENV").esenciafest.com"
          ADMIN_URL="https://admin.$([[ "$ENV" == "dev" ]] && echo "dev" || echo "$ENV").esenciafest.com"
          
          echo "client_url=$CLIENT_URL" >> $GITHUB_OUTPUT
          echo "admin_url=$ADMIN_URL" >> $GITHUB_OUTPUT
          echo "✅ Infrastructure outputs retrieved (simulated)"

      - name: Deploy applications
        id: deploy
        run: |
          echo "🚀 [SIMULATED] Deploying frontend applications..."
          echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          echo "Client URL: ${{ steps.infrastructure.outputs.client_url }}"
          echo "Admin URL: ${{ steps.infrastructure.outputs.admin_url }}"
          
          # Show what we're deploying
          echo "📁 Deploying client artifacts:"
          find apps/client/out -name "*.html" | head -3
          echo "📁 Deploying admin artifacts:"
          find apps/admin/out -name "*.html" | head -3
          
          echo "✅ Frontend deployment completed (simulated)"
          echo "success=true" >> $GITHUB_OUTPUT
          echo "client_url=${{ steps.infrastructure.outputs.client_url }}" >> $GITHUB_OUTPUT

      - name: Summary
        run: |
          echo "## 🌐 Frontend-Only Flow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Flow completed successfully**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 Pre-deploy testing: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Build artifacts: ✅ Reused from testing" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 Frontend deployment: ✅ Completed (simulated)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ needs.determine-environment.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Client URL:** ${{ steps.infrastructure.outputs.client_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Admin URL:** ${{ steps.infrastructure.outputs.admin_url }}" >> $GITHUB_STEP_SUMMARY