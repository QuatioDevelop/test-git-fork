name: 🧪 Post-Deploy E2E Tests

run-name: 🧪 Post-Deploy E2E - ${{ github.ref_name }}

on:
  # Removed workflow_run trigger - now handled by orchestrated-deploy.yml
  workflow_call:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        type: string
      force_run:
        description: 'Force E2E tests to run regardless of environment'
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - prod

env:
  NODE_VERSION: '22'

jobs:
  debug-e2e-conditions:
    runs-on: ubuntu-latest
    steps:
      - name: Debug E2E conditions
        run: |
          echo "=== E2E Debug Info ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Input environment: '${{ inputs.environment }}'"
          echo "Github ref: '${{ github.ref }}'"
          echo "Force run: '${{ inputs.force_run }}'"
          echo "Should run condition: ${{ github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}"

  determine-environment:
    runs-on: ubuntu-latest
    # Skip if environment was injected via workflow_call, run if standalone
    if: ${{ github.event_name != 'workflow_call' || inputs.environment == '' }}
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Determine environment
        id: env
        run: |
          # Priority: 1) workflow_call input, 2) workflow_dispatch input, 3) branch-based detection
          if [ "${{ github.event_name }}" = "workflow_call" ] && [ -n "${{ inputs.environment }}" ]; then
            ENVIRONMENT="${{ inputs.environment }}"
            echo "🎯 Using injected environment from orchestrated workflow: $ENVIRONMENT"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENVIRONMENT="${{ github.event.inputs.environment }}"
            echo "🎯 Using manual dispatch environment: $ENVIRONMENT"
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            ENVIRONMENT="dev"
            echo "🎯 Branch-based environment (main): $ENVIRONMENT"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            ENVIRONMENT="staging"
            echo "🎯 Branch-based environment (staging): $ENVIRONMENT"
          elif [ "${{ github.ref }}" = "refs/heads/production" ]; then
            ENVIRONMENT="prod"
            echo "🎯 Branch-based environment (production): $ENVIRONMENT"
          else
            ENVIRONMENT="dev"
            echo "🎯 Default environment (fallback): $ENVIRONMENT"
          fi
          
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "📍 Final environment: $ENVIRONMENT"
          
      - name: Check if should run
        id: check
        run: |
          # Run for all branches (dev, staging, production) or manual trigger, or when forced
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || 
             [[ "${{ github.ref }}" == "refs/heads/staging" ]] || 
             [[ "${{ github.ref }}" == "refs/heads/production" ]] || 
             [[ "${{ github.event_name }}" == "workflow_dispatch" ]] ||
             [[ "${{ inputs.force_run }}" == "true" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "✅ E2E tests enabled for this environment/trigger"
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "❌ E2E tests disabled for this environment/trigger"
          fi

  e2e-tests:
    runs-on: ubuntu-latest
    needs: determine-environment
    # Run if: standalone execution with should_run=true OR workflow_call with injected environment
    if: always() && (needs.determine-environment.outputs.should_run == 'true' || (github.event_name == 'workflow_call' && inputs.environment != ''))
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Run E2E tests against deployed environment
        env:
          # Use injected environment if available, otherwise use determined environment
          TEST_ENV: ${{ inputs.environment || needs.determine-environment.outputs.environment }}
          E2E_TEST_SECRET: ${{ secrets.E2E_TEST_SECRET }}
          CLIENT_URL: ${{ (inputs.environment || needs.determine-environment.outputs.environment) == 'dev' && 'https://dev.esenciafest.com' || (inputs.environment || needs.determine-environment.outputs.environment) == 'staging' && 'https://staging.esenciafest.com' || 'https://esenciafest.com' }}
          NEXT_PUBLIC_API_BASE_URL: ${{ (inputs.environment || needs.determine-environment.outputs.environment) == 'dev' && 'https://api.dev.esenciafest.com' || (inputs.environment || needs.determine-environment.outputs.environment) == 'staging' && 'https://api.staging.esenciafest.com' || 'https://api.esenciafest.com' }}
        run: |
          echo "🌍 Testing against $TEST_ENV environment"
          echo "🔗 Client URL: $CLIENT_URL"
          echo "🔗 API URL: $NEXT_PUBLIC_API_BASE_URL"
          echo "📍 Environment source: ${{ github.event_name == 'workflow_call' && 'injected from orchestrated workflow' || 'determined locally' }}"
          echo "🧪 Running E2E tests..."
          npm run test:e2e

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results-${{ needs.determine-environment.outputs.environment }}-${{ github.sha }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  notify-results:
    runs-on: ubuntu-latest
    needs: [determine-environment, e2e-tests]
    if: always() && needs.determine-environment.outputs.should_run == 'true'
    steps:
      - name: E2E Test Results Summary
        run: |
          echo "## 🧪 Post-Deploy E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.e2e-tests.result }}" = "success" ]; then
            echo "✅ **E2E Tests**: All tests passed!" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.e2e-tests.result }}" = "failure" ]; then
            echo "❌ **E2E Tests**: Tests failed" >> $GITHUB_STEP_SUMMARY
            echo "Please check the test artifacts for details." >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.e2e-tests.result }}" = "skipped" ]; then
            echo "⏭️ **E2E Tests**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎯 **Environment**: ${{ needs.determine-environment.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Triggered by**: ${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Deployment completion' }}" >> $GITHUB_STEP_SUMMARY

      - name: Create issue if E2E tests failed
        if: needs.e2e-tests.result == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 E2E Tests Failed on ${context.payload.workflow_run ? context.payload.workflow_run.head_branch : context.ref.replace('refs/heads/', '')}`,
              body: `## E2E Test Failure Report
              
              The E2E tests failed after deployment to **${{ needs.determine-environment.outputs.environment }}**.
              
              **Details:**
              - Branch: ${context.ref.replace('refs/heads/', '')}
              - Commit: ${context.sha}
              - Workflow Run: ${context.runId}
              
              Please check the [test artifacts](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for detailed failure information.
              
              cc @QuatioDevelop/dev-team`,
              labels: ['bug', 'e2e-failure', 'high-priority']
            });
            
            console.log(`Created issue #${issue.data.number}`);