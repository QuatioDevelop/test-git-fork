AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFront distribution for Next.js static website hosting

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project
    
  Environment:
    Type: String
    Description: Environment (e.g., dev, prod)
    AllowedValues:
      - dev
      - staging
      - prod
      
  ApplicationType:
    Type: String
    Description: Type of application (client or admin)
    AllowedValues:
      - client
      - admin
    Default: client
    
  BucketName:
    Type: String
    Description: Name of the S3 bucket containing the website content
    
  DomainName:
    Type: String
    Description: Domain name for the CloudFront distribution
    
  CertificateArn:
    Type: String
    Description: ARN of the ACM certificate for the domain
    
  PriceClass:
    Type: String
    Description: CloudFront price class
    Default: PriceClass_200
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All

Resources:
  CloudFrontFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub ${ProjectName}-${Environment}-${ApplicationType}-url-rewrite
      AutoPublish: true
      FunctionConfig:
        Comment: Rewrite URLs for Next.js static export
        Runtime: cloudfront-js-1.0
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          
          // Si la URI no apunta a un archivo específico (no contiene extensión)
          if (!uri.includes('.')) {
            // Si la URI no termina en '/'
            if (!uri.endsWith('/')) {
              // Primero intentar agregar '/' y luego 'index.html' para directorios
              // Esto maneja el caso de /logger -> /logger/index.html
              request.uri = uri + '/index.html';
            } else {
              // Si ya termina en '/', agregar 'index.html'
              request.uri = uri + 'index.html';
            }
          }
          
          return request;
        }

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: !Ref PriceClass
        DefaultRootObject: index.html
        
        # Aliases configuration for custom domain
        Aliases:
          - !Ref DomainName
        
        # SSL Certificate configuration
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        
        # Origin configuration
        Origins:
          - DomainName: !Sub "${BucketName}.s3-website-${AWS::Region}.amazonaws.com"
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
              OriginReadTimeout: 30
              OriginKeepaliveTimeout: 5
        
        # Cache behaviors configuration
        CacheBehaviors:
          # Cache behavior for Next.js static assets
          - PathPattern: "_next/*"
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
            
          # Cache behavior for static media assets
          - PathPattern: "assets/*"
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
            
          # Cache behavior for video assets
          - PathPattern: "video/*"
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
        
        # Default cache behavior
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          
          # Function association for URL rewriting
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt CloudFrontFunction.FunctionARN
          
          # Cache settings
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled for HTML files
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
          
          # Allowed methods
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS

        # Custom error responses
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /404.html
            ErrorCachingMinTTL: 300

      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

Outputs:
  DistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub ${ProjectName}-${Environment}-${ApplicationType}-cf-distribution-id

  DistributionDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub ${ProjectName}-${Environment}-${ApplicationType}-cf-domain-name

  FunctionARN:
    Description: ARN of the CloudFront Function
    Value: !GetAtt CloudFrontFunction.FunctionARN
    Export:
      Name: !Sub ${ProjectName}-${Environment}-${ApplicationType}-cf-function-arn